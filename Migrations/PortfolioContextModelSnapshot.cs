// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using portfolio;

#nullable disable

namespace portfolio.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    partial class PortfolioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("portfolio.Models.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<string>("Institute")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActual")
                        .HasColumnType("bit");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Education", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf047994-d546-48b1-9d0a-b6034aa50898"),
                            EnglishDesc = "Currently at 3rd year with an average of 9/10",
                            HasEnglishDesc = true,
                            Institute = "Universidad Tecnologica Nacional",
                            IsActual = true,
                            NativeDesc = "Me encuentro en 3er año con un promedio de 9/10",
                            Start = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TitleName = "Ingenieria en Sistemas de Informacion",
                            Type = 1,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Experience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActual")
                        .HasColumnType("bit");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Experience", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a135e353-1f4f-45a7-b6b3-808ce8d2d7ef"),
                            Company = "Accusys",
                            EnglishDesc = "Management and optimization of queries, tables, stored procedures and views in MS SQL Server databases. I work with technologies such as WPF, Classic ASP, VBS, HTML, Javascript, Java and IIS",
                            HasEnglishDesc = true,
                            IsActual = true,
                            NativeDesc = "Manejo y optimización de querys, tablas, stored procedures y vistas en bases de datos MS SQL Server. Trabajo con tecnologías tales como WPF, ASP Clásico, VBS, HTML, Javascript, Java y IIS",
                            Position = "Analista Programador Junior",
                            Start = new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d8c0738-424a-470b-a02d-bfe091558831"),
                            EnglishDesc = "Personal portfolio made with REACT + Typescript + Tailwindcss + .NET 6 + SQL Server",
                            HasEnglishDesc = true,
                            Name = "Portfolio",
                            NativeDesc = "Portfolio personal realizado con REACT + Typescript + Tailwindcss + .NET 6 + SQL Server",
                            Url = "https://tiagoramirez-portfolio.netlify.app/tiagoramirez",
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Skill", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b020f36-d959-4304-8be9-a0ad92105335"),
                            Name = "C#",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("d73abf96-3c66-45ff-a651-304ef12147bc"),
                            Name = ".NET API",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("2ca561c9-ef16-499b-bfe2-09b7e86792f2"),
                            Name = ".NET CORE 6",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("09931a46-4f03-41ad-8494-a265f3c8754b"),
                            Name = ".NET WPF",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("e87dba1f-4ae1-4831-8e84-76af479379c8"),
                            Name = "Entity Framework",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("965d9fd5-0ffa-4150-8188-d9fe21117f8b"),
                            Name = "Fluent API",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("e6928cbd-a13f-4041-a4bb-1b729ced8238"),
                            Name = "Migrations",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("731ebb23-0cee-4f4a-a53f-dbe94823b993"),
                            Name = "Middlewares",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("fca0e724-edb4-4f26-90f1-9b9aabf916b2"),
                            Name = "Python",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("0a8e5f19-29e3-4f7b-b15e-79e0ef1e9e7b"),
                            Name = "Java",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f16d09ba-acb0-4f19-ada1-d10d84a77fbd"),
                            Name = "Java Spring",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("08167ec6-d30c-40a6-92d7-eb06113cf940"),
                            Name = "SQL",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f4a01dab-8aa4-4780-bd6e-4638b3ff7e19"),
                            Name = "MS SQL Server",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("1f7dcb2c-0979-488c-b739-6913e86b5c99"),
                            Name = "MySql",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("6d01c24c-2643-4b50-9afd-451248f665ca"),
                            Name = "HTML",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("3e51e2b6-4f44-4341-91cb-c3150f3dfb12"),
                            Name = "CSS",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("a4743361-bdf0-4df2-9f65-4dee215bb433"),
                            Name = "Bootstrap",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("fa1dd71f-4546-491d-919b-dd6deb895e0f"),
                            Name = "JavaScript",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("2bd96cc9-4cf9-459c-bea0-4eebbe2153ee"),
                            Name = "TypeScript",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("06d85e3f-7305-44d2-9315-c1f99afb2b9c"),
                            Name = "Angular",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("abf491de-913d-46d4-a30a-b3a55eebc952"),
                            Name = "React",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("03badd18-142e-4ee1-8767-cfae38f1e8ea"),
                            Name = "Redux Toolkit",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("09e8b0dd-57e7-4054-8ffe-5b5a8af74ae4"),
                            Name = "React Router",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("33b99740-936e-40df-8e9a-aec0f686b702"),
                            Name = "Vite",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("57e18b6c-8f53-448f-ae72-1770e7d7a70a"),
                            Name = "Vitest",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("cc3b831f-097a-4be0-8ccb-d1913fcb3961"),
                            Name = "Testing library",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("4d87ee36-7c36-4343-b135-e7852f2ff76e"),
                            Name = "TailwindCss",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("42f90172-c0e5-4a55-9ab1-ce63e5bc8803"),
                            Name = "Git",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("0eef2041-ee33-4b3a-b93c-10fd257b527b"),
                            Name = "Scrum",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("ad4e69fe-9d22-4738-bb92-24e11f1d870e"),
                            Name = "ERD / DER",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("f771aa1b-8ee9-44e4-b71e-e4436d819997"),
                            Name = "UML",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("9539e24c-eb3b-4e4c-a13e-c517ea36e7be"),
                            Name = "JWT",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("b233ec82-3ffb-45f6-8fb3-338d583f5ac7"),
                            Name = "Linux",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("4870b24a-8e82-47ee-93af-c88d3cd01238"),
                            Name = "REST API",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("62c8f993-8688-46cb-8ebb-7c4964af4d72"),
                            Name = "Node",
                            Type = 2
                        });
                });

            modelBuilder.Entity("portfolio.Models.SocialMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SocialMedia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9e84842-7feb-4a54-acce-ab559a3b924c"),
                            Name = 1,
                            Url = "https://www.github.com/tiagoramirez/",
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("7be37952-f510-490c-83c0-7c2281259330"),
                            Name = 3,
                            Url = "https://www.linkedin.com/in/tiagoramirezmar/",
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EnglishAboutMe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishAboutMe")
                        .HasColumnType("bit");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnglishModeEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LocationCountry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocationState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NativeAboutMe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1",
                            Created = new DateTime(2023, 4, 1, 0, 10, 9, 967, DateTimeKind.Local).AddTicks(5713),
                            Email = "tiagoramirez2001@gmail.com",
                            EnglishAboutMe = "Fullstack Web Dev. with 1 year of experience in the IT area. My main stack: React + Typescript + .NET 6 API + SQL Server + Node",
                            EnglishDesc = "FullStack Web Dev. with +1yr exp. || React + Typescript + .NET 6 + SQL Server + Node || Student in Systems Engineering - UTN (Argentina)",
                            HasEnglishAboutMe = true,
                            HasEnglishDesc = true,
                            IsEnglishModeEnabled = true,
                            LocationCountry = "Argentina",
                            LocationState = "C.A.B.A.",
                            Name = "Tiago Alberto Ramirez Marchisio",
                            NativeAboutMe = "Fullstack Web Dev. con 1 año de experiencia en el área de TI. Mi stack principal: React + Typescript + .NET 6 API + SQL Server + Node",
                            NativeDesc = "FullStack Web Dev. con +1 año de exp. || React + Typescript + .NET 6 + SQL Server + Node || Ingeniería en Sistemas de Información - UTN (Argentina)",
                            Status = true,
                            Username = "tiagoramirez"
                        });
                });

            modelBuilder.Entity("portfolio.Models.User_Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Skill", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bfcaadb4-e5f0-46f2-a9d8-4e4355b332fa"),
                            Percentage = 100,
                            SkillId = new Guid("3b020f36-d959-4304-8be9-a0ad92105335"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("803a9fe4-711a-418e-a6e0-cbba220f69b1"),
                            Percentage = 90,
                            SkillId = new Guid("d73abf96-3c66-45ff-a651-304ef12147bc"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("d1d3c91b-53bb-4c8c-827e-49d288fd377d"),
                            Percentage = 90,
                            SkillId = new Guid("2ca561c9-ef16-499b-bfe2-09b7e86792f2"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("384dbda5-8436-4eec-83e8-2257a81635de"),
                            Percentage = 75,
                            SkillId = new Guid("09931a46-4f03-41ad-8494-a265f3c8754b"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("01e9bf64-efc7-4792-95ad-6d16a81eed08"),
                            Percentage = 90,
                            SkillId = new Guid("e87dba1f-4ae1-4831-8e84-76af479379c8"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("4c19e963-29ae-4c41-9bd4-4a2b6313889b"),
                            Percentage = 95,
                            SkillId = new Guid("965d9fd5-0ffa-4150-8188-d9fe21117f8b"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("eef647e5-9e26-4266-8b2d-65437f7dc73e"),
                            Percentage = 100,
                            SkillId = new Guid("e6928cbd-a13f-4041-a4bb-1b729ced8238"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("57040d5f-a4be-46ad-b508-6751075fdd0e"),
                            Percentage = 90,
                            SkillId = new Guid("731ebb23-0cee-4f4a-a53f-dbe94823b993"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("d20f0593-602c-4a6f-98b8-347c0a3c9e7d"),
                            Percentage = 90,
                            SkillId = new Guid("0a8e5f19-29e3-4f7b-b15e-79e0ef1e9e7b"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("a6b91e72-528b-4870-8d30-7434774fd1c0"),
                            Percentage = 70,
                            SkillId = new Guid("f16d09ba-acb0-4f19-ada1-d10d84a77fbd"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("4bcbfbce-7291-40a8-8a44-107e59017b77"),
                            Percentage = 100,
                            SkillId = new Guid("08167ec6-d30c-40a6-92d7-eb06113cf940"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("6be3fc2c-e8ed-4d79-9115-813ed34b0610"),
                            Percentage = 100,
                            SkillId = new Guid("f4a01dab-8aa4-4780-bd6e-4638b3ff7e19"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("3522b888-3554-4ff8-8909-85de2dbb8103"),
                            Percentage = 70,
                            SkillId = new Guid("1f7dcb2c-0979-488c-b739-6913e86b5c99"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("4e326a34-ac14-4299-b692-7b4ff6a3bb3a"),
                            Percentage = 90,
                            SkillId = new Guid("6d01c24c-2643-4b50-9afd-451248f665ca"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("8f314b99-1e2d-463e-92ac-2ff18dcccac7"),
                            Percentage = 80,
                            SkillId = new Guid("3e51e2b6-4f44-4341-91cb-c3150f3dfb12"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("56d2091c-3146-432b-b2b7-c37e0308cf94"),
                            Percentage = 90,
                            SkillId = new Guid("fa1dd71f-4546-491d-919b-dd6deb895e0f"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("3dcf9455-3496-4137-81f9-7de6e3afeb00"),
                            Percentage = 100,
                            SkillId = new Guid("2bd96cc9-4cf9-459c-bea0-4eebbe2153ee"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("71507e1d-e02e-4a30-bbbf-8783247fa096"),
                            Percentage = 70,
                            SkillId = new Guid("06d85e3f-7305-44d2-9315-c1f99afb2b9c"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("9cc335c8-a6ce-4f46-9466-7b52772b6e92"),
                            Percentage = 95,
                            SkillId = new Guid("abf491de-913d-46d4-a30a-b3a55eebc952"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("1f95b03c-dc42-4ec5-9074-c9fe746a930e"),
                            Percentage = 95,
                            SkillId = new Guid("03badd18-142e-4ee1-8767-cfae38f1e8ea"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("94651e06-a108-48a2-94a8-4aa3dd6c4c97"),
                            Percentage = 95,
                            SkillId = new Guid("09e8b0dd-57e7-4054-8ffe-5b5a8af74ae4"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("cf1d3fb2-ea5f-442b-8a73-d0e6bad0a08c"),
                            Percentage = 80,
                            SkillId = new Guid("33b99740-936e-40df-8e9a-aec0f686b702"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("c9c64c70-5524-4c84-b585-675f20973c40"),
                            Percentage = 80,
                            SkillId = new Guid("57e18b6c-8f53-448f-ae72-1770e7d7a70a"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("aae7e4cb-21b4-4995-afc5-3f8079a87d2c"),
                            Percentage = 80,
                            SkillId = new Guid("cc3b831f-097a-4be0-8ccb-d1913fcb3961"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("0de3503b-4ce0-4417-91e4-d05ae7b8c10b"),
                            Percentage = 95,
                            SkillId = new Guid("4d87ee36-7c36-4343-b135-e7852f2ff76e"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("e67f1e10-7507-4401-a618-bf0ab857b932"),
                            Percentage = 90,
                            SkillId = new Guid("42f90172-c0e5-4a55-9ab1-ce63e5bc8803"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("b97dd71e-6b01-4d70-8ce2-9cb173141003"),
                            Percentage = 90,
                            SkillId = new Guid("0eef2041-ee33-4b3a-b93c-10fd257b527b"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("2340f117-ca92-4666-a456-cad721efe7de"),
                            Percentage = 100,
                            SkillId = new Guid("ad4e69fe-9d22-4738-bb92-24e11f1d870e"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("983a1527-9a4a-4c53-ab7d-1f4c3f944c7a"),
                            Percentage = 100,
                            SkillId = new Guid("f771aa1b-8ee9-44e4-b71e-e4436d819997"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("1dad3e9a-2a79-4a10-b545-86060b9c488f"),
                            Percentage = 90,
                            SkillId = new Guid("9539e24c-eb3b-4e4c-a13e-c517ea36e7be"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("9526b3de-26b2-4a83-b5c5-24fb15586447"),
                            Percentage = 80,
                            SkillId = new Guid("b233ec82-3ffb-45f6-8fb3-338d583f5ac7"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("870d2802-2d47-4b56-8d03-b046fd8343e0"),
                            Percentage = 90,
                            SkillId = new Guid("4870b24a-8e82-47ee-93af-c88d3cd01238"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("268aecf3-8e4c-402d-9c9f-a377daefed3d"),
                            Percentage = 85,
                            SkillId = new Guid("62c8f993-8688-46cb-8ebb-7c4964af4d72"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Education", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Educations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Experience", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Experiences")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Project", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.SocialMedia", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("SocialMedias")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.User_Skill", b =>
                {
                    b.HasOne("portfolio.Models.Skill", "Skill")
                        .WithMany("User_Skills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Skills")
                        .HasForeignKey("UserId");

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Skill", b =>
                {
                    b.Navigation("User_Skills");
                });

            modelBuilder.Entity("portfolio.Models.User", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Experiences");

                    b.Navigation("Projects");

                    b.Navigation("Skills");

                    b.Navigation("SocialMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
