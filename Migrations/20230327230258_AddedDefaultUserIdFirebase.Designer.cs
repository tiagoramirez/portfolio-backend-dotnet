// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using portfolio;

#nullable disable

namespace portfolio.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20230327230258_AddedDefaultUserIdFirebase")]
    partial class AddedDefaultUserIdFirebase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("portfolio.Models.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<string>("Institute")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActual")
                        .HasColumnType("bit");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Education", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef540644-bf77-46b0-ae9b-7d95930e82fa"),
                            EnglishDesc = "Currently at 3rd year with an average of 9/10",
                            HasEnglishDesc = true,
                            Institute = "Universidad Tecnologica Nacional",
                            IsActual = true,
                            NativeDesc = "Me encuentro en 3er año con un promedio de 9/10",
                            Start = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TitleName = "Ingenieria en Sistemas de Informacion",
                            Type = 1,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Experience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActual")
                        .HasColumnType("bit");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Experience", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6245192c-0de8-41c3-bb99-a901e9f29500"),
                            Company = "Accusys",
                            EnglishDesc = "Management and optimization of queries, tables, stored procedures and views in MS SQL Server databases. I work with technologies such as WPF, Classic ASP, VBS, HTML, Javascript, Java and IIS",
                            HasEnglishDesc = true,
                            IsActual = true,
                            NativeDesc = "Manejo y optimización de querys, tablas, stored procedures y vistas en bases de datos MS SQL Server. Trabajo con tecnologías tales como WPF, ASP Clásico, VBS, HTML, Javascript, Java y IIS",
                            Position = "Analista Programador Junior",
                            Start = new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0,
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7a3e307-1e67-4c7a-a669-79e249f2191c"),
                            EnglishDesc = "Personal portfolio made with REACT + Typescript + Tailwindcss + .NET 6 + SQL Server",
                            HasEnglishDesc = true,
                            Name = "Portfolio",
                            NativeDesc = "Portfolio personal realizado con REACT + Typescript + Tailwindcss + .NET 6 + SQL Server",
                            Url = "https://tiagoramirez-portfolio.netlify.app/tiagoramirez",
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Skill", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e0d9995-0e25-485e-9949-7f9369966c1f"),
                            Name = "C#",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("4d58ab3e-5aa2-457e-90e3-9e87238e25fd"),
                            Name = ".NET API",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("9e5a435d-80d9-42fe-b7a7-4a6f176afe9b"),
                            Name = ".NET CORE 6",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("84b663b6-6794-4e3e-8a51-6aa94d12e649"),
                            Name = ".NET WPF",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("537dd86f-3600-46e9-ab87-5556fba3e926"),
                            Name = "Entity Framework",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f2f9c066-6633-4e88-9758-0a4dc16c9268"),
                            Name = "Fluent API",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("af6644fe-0bd9-457d-b72c-6a8bd2274411"),
                            Name = "Migrations",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("ec012913-3410-400f-9add-f034ffe3d524"),
                            Name = "Middlewares",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("5a7d2439-2e74-479c-97a0-7695f677f2d7"),
                            Name = "Python",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("a81e5119-5028-46b3-8a9b-c673c18eed18"),
                            Name = "Java",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("7b9b2d09-0193-4279-b221-5e4b01278dda"),
                            Name = "Java Spring",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f6de97d5-b29a-4b00-9390-3d23bdedd344"),
                            Name = "SQL",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f2245684-fa41-4288-8383-035d1f3f5fd0"),
                            Name = "MS SQL Server",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("740617df-d6dd-4b81-a93a-9c71db489c5c"),
                            Name = "MySql",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("731cef62-5afb-45f3-91a9-44af718fd5e0"),
                            Name = "HTML",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("bb6b27ca-ae1e-4dc9-bee8-e3c6c140aa43"),
                            Name = "CSS",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("89a8b406-f775-4eda-a38d-fff806190dab"),
                            Name = "Bootstrap",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("75960ecf-45ce-4477-8a8d-0584a6fbfe2c"),
                            Name = "JavaScript",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("168c4c07-3c09-41f8-8524-4592233bbbe0"),
                            Name = "TypeScript",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("62c43ee8-b8b1-4f7d-a688-a2b0584810ea"),
                            Name = "Angular",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("32d474ea-de50-4ac2-af59-7a78764cdbd1"),
                            Name = "React",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("fe5f14d1-1060-4bd8-b422-74cf9417840c"),
                            Name = "Redux Toolkit",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("70ef1eb6-ae3f-49a1-86e3-2573602bfa8b"),
                            Name = "React Router",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("0fc23861-f119-4b68-bc9f-184f4e6605a8"),
                            Name = "Vite",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("4d0313cc-37da-48da-95b6-f8a6eec155e8"),
                            Name = "Vitest",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("720d7c39-7c84-46c5-b406-f233d161f812"),
                            Name = "Testing library",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("c06e900c-985a-4781-ac57-34d7e6b822b7"),
                            Name = "TailwindCss",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("58dce498-8423-4365-b247-6bc96888e07a"),
                            Name = "Git",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("1d8be24e-6d45-4265-9bf3-a7325844834e"),
                            Name = "Scrum",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("30e82877-d60d-4686-bb6b-f820f13e24f7"),
                            Name = "ERD / DER",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("5c7bdddf-4d00-4fb8-bf8c-9d3569bb84a6"),
                            Name = "UML",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("241ea3a9-a684-4d16-aac2-3ebf6f1b247f"),
                            Name = "JWT",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("caff19cb-b84c-471c-acca-51a110350e55"),
                            Name = "Linux",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("eb64f068-eb9d-442f-bdcc-c7228a74f476"),
                            Name = "REST API",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("1ed46152-83b2-4e9a-a6fe-761b4aa0df5f"),
                            Name = "Node",
                            Type = 2
                        });
                });

            modelBuilder.Entity("portfolio.Models.SocialMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IconClassName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("SocialMedia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7883bc79-de41-44a8-b5fc-8ead2d4eb31b"),
                            IconClassName = "bi bi-facebook",
                            Name = "Facebook"
                        },
                        new
                        {
                            Id = new Guid("13ef3d42-eeeb-469a-8a55-453a1b1ab4d0"),
                            IconClassName = "bi bi-whatsapp",
                            Name = "Whatsapp"
                        },
                        new
                        {
                            Id = new Guid("96267af7-cc51-4ca2-a13d-64f954565c0a"),
                            IconClassName = "bi bi-github",
                            Name = "Github"
                        },
                        new
                        {
                            Id = new Guid("2d51885d-434e-4a02-bc1e-c548d7633672"),
                            IconClassName = "bi bi-instagram",
                            Name = "Instagram"
                        },
                        new
                        {
                            Id = new Guid("65fb075c-3e35-4302-ac61-42da71e9040d"),
                            IconClassName = "bi bi-linkedin",
                            Name = "LinkedIn"
                        },
                        new
                        {
                            Id = new Guid("8d91139d-b0f9-45d9-a0e8-37d8f10866e1"),
                            IconClassName = "bi bi-twitter",
                            Name = "Twitter"
                        },
                        new
                        {
                            Id = new Guid("0cc141d9-ef8a-4016-b2e9-0518d6047e2c"),
                            IconClassName = "bi bi-youtube",
                            Name = "Youtube"
                        },
                        new
                        {
                            Id = new Guid("41891ccc-8461-47c7-933a-49a33c472581"),
                            IconClassName = "bi bi-person-circle",
                            Name = "Personal"
                        });
                });

            modelBuilder.Entity("portfolio.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EnglishAboutMe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishAboutMe")
                        .HasColumnType("bit");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnglishModeEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LocationCountry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocationState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NativeAboutMe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1",
                            Created = new DateTime(2023, 3, 27, 20, 2, 58, 389, DateTimeKind.Local).AddTicks(6658),
                            Email = "tiagoramirez2001@gmail.com",
                            EnglishAboutMe = "Fullstack Web Dev. with 1 year of experience in the IT area. My main stack: React + Typescript + .NET 6 API + SQL Server + Node",
                            EnglishDesc = "FullStack Web Dev. with +1yr exp. || React + Typescript + .NET 6 + SQL Server + Node || Student in Systems Engineering - UTN (Argentina)",
                            HasEnglishAboutMe = true,
                            HasEnglishDesc = true,
                            IsEnglishModeEnabled = true,
                            LocationCountry = "Argentina",
                            LocationState = "C.A.B.A.",
                            Name = "Tiago Alberto Ramirez Marchisio",
                            NativeAboutMe = "Fullstack Web Dev. con 1 año de experiencia en el área de TI. Mi stack principal: React + Typescript + .NET 6 API + SQL Server + Node",
                            NativeDesc = "FullStack Web Dev. con +1 año de exp. || React + Typescript + .NET 6 + SQL Server + Node || Ingeniería en Sistemas de Información - UTN (Argentina)",
                            Role = "USR",
                            Status = true,
                            Username = "tiagoramirez"
                        });
                });

            modelBuilder.Entity("portfolio.Models.User_Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Skill", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4b99fb2-a1f7-4bb1-89a3-c83a12dcacc1"),
                            Percentage = 100,
                            SkillId = new Guid("7e0d9995-0e25-485e-9949-7f9369966c1f"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("4e180985-2f54-4d60-912f-391b330c8dea"),
                            Percentage = 90,
                            SkillId = new Guid("4d58ab3e-5aa2-457e-90e3-9e87238e25fd"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("fcffc7de-14b0-4ca5-997f-101f93afc36b"),
                            Percentage = 90,
                            SkillId = new Guid("9e5a435d-80d9-42fe-b7a7-4a6f176afe9b"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("67855177-8fdb-4439-87fe-f420dc0aad58"),
                            Percentage = 75,
                            SkillId = new Guid("84b663b6-6794-4e3e-8a51-6aa94d12e649"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("49acfb52-0080-45da-8025-776acbb54bcd"),
                            Percentage = 90,
                            SkillId = new Guid("537dd86f-3600-46e9-ab87-5556fba3e926"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("142613ef-a293-402d-bf2d-ef4c2ad5f492"),
                            Percentage = 95,
                            SkillId = new Guid("f2f9c066-6633-4e88-9758-0a4dc16c9268"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("49475a5e-13e0-44b1-aaef-ada31b62d726"),
                            Percentage = 100,
                            SkillId = new Guid("af6644fe-0bd9-457d-b72c-6a8bd2274411"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("17425902-ea48-422d-9554-2c0656a0fd88"),
                            Percentage = 90,
                            SkillId = new Guid("ec012913-3410-400f-9add-f034ffe3d524"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("8e9968bd-9261-47d4-a719-92e96fd21796"),
                            Percentage = 90,
                            SkillId = new Guid("a81e5119-5028-46b3-8a9b-c673c18eed18"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("6d284dff-837f-4edc-afe9-4d53e453d6e0"),
                            Percentage = 70,
                            SkillId = new Guid("7b9b2d09-0193-4279-b221-5e4b01278dda"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("71877a5e-71d5-41a6-ad7b-479f83526a19"),
                            Percentage = 100,
                            SkillId = new Guid("f6de97d5-b29a-4b00-9390-3d23bdedd344"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("b57c2eef-a687-43a1-907e-279ff2d4db59"),
                            Percentage = 100,
                            SkillId = new Guid("f2245684-fa41-4288-8383-035d1f3f5fd0"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("40ae4620-ddf7-40fc-ae99-2abdc455f318"),
                            Percentage = 70,
                            SkillId = new Guid("740617df-d6dd-4b81-a93a-9c71db489c5c"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("bdd88aa6-81d0-4b63-959f-b950672e93fd"),
                            Percentage = 90,
                            SkillId = new Guid("731cef62-5afb-45f3-91a9-44af718fd5e0"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("56a0263e-c26b-46f2-b953-d6d98046b31b"),
                            Percentage = 80,
                            SkillId = new Guid("bb6b27ca-ae1e-4dc9-bee8-e3c6c140aa43"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("3b57fe61-5a00-4d8c-a61e-91a7521e548b"),
                            Percentage = 90,
                            SkillId = new Guid("75960ecf-45ce-4477-8a8d-0584a6fbfe2c"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("f1a7d698-5bfc-4305-8c27-b6caa9c6d6ab"),
                            Percentage = 100,
                            SkillId = new Guid("168c4c07-3c09-41f8-8524-4592233bbbe0"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("26613f2a-d331-4fe9-9f79-961e9487edf7"),
                            Percentage = 70,
                            SkillId = new Guid("62c43ee8-b8b1-4f7d-a688-a2b0584810ea"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("4acb9555-7759-4728-a8f7-f96920bf639b"),
                            Percentage = 95,
                            SkillId = new Guid("32d474ea-de50-4ac2-af59-7a78764cdbd1"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("cbd8ed3d-304a-44a5-abf6-9d9f779fbd12"),
                            Percentage = 95,
                            SkillId = new Guid("fe5f14d1-1060-4bd8-b422-74cf9417840c"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("809ee80a-c336-4bb9-9c90-c64a61250716"),
                            Percentage = 95,
                            SkillId = new Guid("70ef1eb6-ae3f-49a1-86e3-2573602bfa8b"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("3e40bfd1-eb72-4f08-a0bb-42a5359abebb"),
                            Percentage = 80,
                            SkillId = new Guid("0fc23861-f119-4b68-bc9f-184f4e6605a8"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("8a7af622-da8d-429e-8f0a-8b9cff61a416"),
                            Percentage = 80,
                            SkillId = new Guid("4d0313cc-37da-48da-95b6-f8a6eec155e8"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("eccae706-05a3-498a-a1cb-9cd8075e2656"),
                            Percentage = 80,
                            SkillId = new Guid("720d7c39-7c84-46c5-b406-f233d161f812"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("1a8c4349-aae3-43fc-b4db-71e63ba3f464"),
                            Percentage = 95,
                            SkillId = new Guid("c06e900c-985a-4781-ac57-34d7e6b822b7"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("691c36fc-10de-4e4b-8f67-a7cda8a04077"),
                            Percentage = 90,
                            SkillId = new Guid("58dce498-8423-4365-b247-6bc96888e07a"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("fc6c15de-d45c-4b80-978f-b9213cdf85a8"),
                            Percentage = 90,
                            SkillId = new Guid("1d8be24e-6d45-4265-9bf3-a7325844834e"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("18ebf1cf-d661-41fc-8656-876beeb41268"),
                            Percentage = 100,
                            SkillId = new Guid("30e82877-d60d-4686-bb6b-f820f13e24f7"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("50b5c45e-4119-496a-beb2-d44ce4e68ced"),
                            Percentage = 100,
                            SkillId = new Guid("5c7bdddf-4d00-4fb8-bf8c-9d3569bb84a6"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("6b36330f-6284-472b-b937-4684c646abb5"),
                            Percentage = 90,
                            SkillId = new Guid("241ea3a9-a684-4d16-aac2-3ebf6f1b247f"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("8c01f0de-a4e1-4683-8ed9-0c8cbd163539"),
                            Percentage = 80,
                            SkillId = new Guid("caff19cb-b84c-471c-acca-51a110350e55"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("5be873d7-b6c6-4cd1-a9e2-7c151e8dd556"),
                            Percentage = 90,
                            SkillId = new Guid("eb64f068-eb9d-442f-bdcc-c7228a74f476"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("79331370-3302-4dad-a852-96bbb991d38e"),
                            Percentage = 85,
                            SkillId = new Guid("1ed46152-83b2-4e9a-a6fe-761b4aa0df5f"),
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.User_SocialMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SocialMediaId");

                    b.HasIndex("UserId");

                    b.ToTable("User_SocialMedia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("08cb7e33-09b4-4dd9-b166-e1a9abfb38b6"),
                            SocialMediaId = new Guid("96267af7-cc51-4ca2-a13d-64f954565c0a"),
                            Url = "https://www.github.com/tiagoramirez/",
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        },
                        new
                        {
                            Id = new Guid("28c8502c-a944-4a26-a5ba-41205881ca21"),
                            SocialMediaId = new Guid("65fb075c-3e35-4302-ac61-42da71e9040d"),
                            Url = "https://www.linkedin.com/in/tiagoramirezmar/",
                            UserId = "p7EW1FzwW5hgFi4YTV1mmdHTAnm1"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Education", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Educations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Experience", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Experiences")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Project", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.User_Skill", b =>
                {
                    b.HasOne("portfolio.Models.Skill", "Skill")
                        .WithMany("User_Skills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Skills")
                        .HasForeignKey("UserId");

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.User_SocialMedia", b =>
                {
                    b.HasOne("portfolio.Models.SocialMedia", "SocialMedia")
                        .WithMany("User_SocialMedias")
                        .HasForeignKey("SocialMediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("SocialMedias")
                        .HasForeignKey("UserId");

                    b.Navigation("SocialMedia");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Skill", b =>
                {
                    b.Navigation("User_Skills");
                });

            modelBuilder.Entity("portfolio.Models.SocialMedia", b =>
                {
                    b.Navigation("User_SocialMedias");
                });

            modelBuilder.Entity("portfolio.Models.User", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Experiences");

                    b.Navigation("Projects");

                    b.Navigation("Skills");

                    b.Navigation("SocialMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
