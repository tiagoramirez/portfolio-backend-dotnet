// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using portfolio;

#nullable disable

namespace portfolio.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20230315174120_ImprovedSMandSkills")]
    partial class ImprovedSMandSkills
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("portfolio.Models.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<string>("Institute")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActual")
                        .HasColumnType("bit");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Education", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5981b64-7e20-486a-b4a9-06dae0bf0d26"),
                            EnglishDesc = "Currently at 3rd year with an average of 9/10",
                            HasEnglishDesc = true,
                            Institute = "Universidad Tecnologica Nacional",
                            IsActual = true,
                            NativeDesc = "Me encuentro en 3er año con un promedio de 9/10",
                            Start = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TitleName = "Ingenieria en Sistemas de Informacion",
                            Type = 1,
                            UserId = "00000000000000000000000000000"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Experience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActual")
                        .HasColumnType("bit");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Experience", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("98e1a25f-64b3-4a87-82cb-c373df7f92a7"),
                            Company = "Accusys",
                            EnglishDesc = "Management and optimization of queries, tables, stored procedures and views in MS SQL Server databases. I work with technologies such as WPF, Classic ASP, VBS, HTML, Javascript, Java and IIS",
                            HasEnglishDesc = true,
                            IsActual = true,
                            NativeDesc = "Manejo y optimización de querys, tablas, stored procedures y vistas en bases de datos MS SQL Server. Trabajo con tecnologías tales como WPF, ASP Clásico, VBS, HTML, Javascript, Java y IIS",
                            Position = "Analista Programador Junior",
                            Start = new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0,
                            UserId = "00000000000000000000000000000"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ff35ac4e-66dc-4487-b20d-7682a6203eb3"),
                            EnglishDesc = "Personal portfolio made with REACT + Typescript + Tailwindcss + .NET 6 + SQL Server",
                            HasEnglishDesc = true,
                            Name = "Portfolio",
                            NativeDesc = "Portfolio personal realizado con REACT + Typescript + Tailwindcss + .NET 6 + SQL Server",
                            Url = "https://tiagoramirez-portfolio.netlify.app/tiagoramirez",
                            UserId = "00000000000000000000000000000"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Skill", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1121bc0b-c794-493f-b082-a01434bd1600"),
                            Name = "C#",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f20347f9-88ee-441c-a2c2-0be4ac3a12cb"),
                            Name = ".NET API",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("a0c607dc-b4a8-48c2-9b50-6c76307ee18f"),
                            Name = ".NET CORE 6",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("01736635-6135-4855-ac64-8d506a00b7e3"),
                            Name = ".NET WPF",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("1b677ea6-c7ba-4122-8568-2ac2d1a63775"),
                            Name = "Entity Framework",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("df4f8daf-d2f2-4408-bca6-36817a59e276"),
                            Name = "Fluent API",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("5bbaa8fc-1fa7-4f5e-b794-bc4bb542e475"),
                            Name = "Migrations",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("2a3e2976-1a46-4b37-bb72-1407a293c6f2"),
                            Name = "Middlewares",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("ed855864-59db-43c3-9a56-afc80db23dea"),
                            Name = "Python",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("00d7a50f-d03e-439e-98d1-0598edac66c8"),
                            Name = "Java",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("52d2e5a9-6c7b-446a-9eed-2fdceecacba8"),
                            Name = "Java Spring",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("ae5de5d2-5907-4c89-954b-5392fc468d61"),
                            Name = "SQL",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("b7a709d4-5018-4e63-85af-e1c5aaf0e999"),
                            Name = "MS SQL Server",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("07126d57-4c45-468d-8b79-d63fc0f404fb"),
                            Name = "MySql",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("078b6b41-488e-48de-bd91-e35c00707a71"),
                            Name = "HTML",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("88b7fabd-bdfe-4482-8017-189281262f87"),
                            Name = "CSS",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("0873ac3a-ebe0-4498-93f0-24ba05bd9aa9"),
                            Name = "Bootstrap",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("e5ec4653-de39-4c5f-850a-484c3571fa37"),
                            Name = "JavaScript",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("ce7eab35-5497-4c65-b347-b8946565b7ff"),
                            Name = "TypeScript",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("7e55997c-65c8-4ad8-94cf-f202c70b790e"),
                            Name = "Angular",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("83e7506c-1bce-4745-9fb5-d02bdb97ec55"),
                            Name = "React",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("5f8ac962-29de-40a2-ae70-4a9454d13af0"),
                            Name = "Redux Toolkit",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("b4a0ac5c-6196-443b-b51a-bb713368a13c"),
                            Name = "React Router",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("55d5154c-0fe0-44e0-a858-dcf84cd722ab"),
                            Name = "Vite",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("7dfdb4d5-ccf2-4289-a806-f8d6eb446976"),
                            Name = "Vitest",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("531e893a-69b0-44f1-a1a5-a78fa45942df"),
                            Name = "Testing library",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("cce7167a-c15c-4eeb-8233-ba21c7903b24"),
                            Name = "TailwindCss",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("a8bfd73f-60cb-4086-9a9d-5eecc5348b4a"),
                            Name = "Git",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("2214731b-3cc1-4e68-ac3c-0f3cd6cdd9de"),
                            Name = "Scrum",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("0d79c929-375c-4f12-867f-a2231ece9cb8"),
                            Name = "ERD / DER",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("ea519d0b-b411-4643-83d4-9f2309ee9f38"),
                            Name = "UML",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("5846e310-ed1d-4ceb-ae3f-bbb1acbc5bb7"),
                            Name = "JWT",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("d25a6709-4d66-4c71-9f73-5fe8c3f327b9"),
                            Name = "Linux",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("74336b5a-99ba-4b9a-a45b-682a738759dd"),
                            Name = "REST API",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("89b26a42-7c0b-4ac2-aaf7-cbe966dbfa98"),
                            Name = "Node",
                            Type = 2
                        });
                });

            modelBuilder.Entity("portfolio.Models.SocialMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IconClassName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("SocialMedia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e5dd30e-ffc8-4521-9735-0718646f5eb9"),
                            IconClassName = "bi bi-facebook",
                            Name = "Facebook"
                        },
                        new
                        {
                            Id = new Guid("4abb1d53-6560-44b0-a693-3d79f9a9a5e5"),
                            IconClassName = "bi bi-whatsapp",
                            Name = "Whatsapp"
                        },
                        new
                        {
                            Id = new Guid("33a0a8ef-474c-4755-9634-810b37c6c3e6"),
                            IconClassName = "bi bi-github",
                            Name = "Github"
                        },
                        new
                        {
                            Id = new Guid("f404b236-ffa4-46a6-be61-39fe847e2508"),
                            IconClassName = "bi bi-instagram",
                            Name = "Instagram"
                        },
                        new
                        {
                            Id = new Guid("1c8c83aa-16e3-4ffd-a15a-9fb68454f537"),
                            IconClassName = "bi bi-linkedin",
                            Name = "LinkedIn"
                        },
                        new
                        {
                            Id = new Guid("7d7c15e4-005b-4728-b734-153a1d618adf"),
                            IconClassName = "bi bi-twitter",
                            Name = "Twitter"
                        },
                        new
                        {
                            Id = new Guid("b2c292ca-b7f2-4b8c-9e75-f6159439ca8d"),
                            IconClassName = "bi bi-youtube",
                            Name = "Youtube"
                        },
                        new
                        {
                            Id = new Guid("40e062e4-c6f6-47a1-aad3-cce06047ca7e"),
                            IconClassName = "bi bi-person-circle",
                            Name = "Personal"
                        });
                });

            modelBuilder.Entity("portfolio.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EnglishAboutMe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EnglishDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("HasEnglishAboutMe")
                        .HasColumnType("bit");

                    b.Property<bool>("HasEnglishDesc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnglishModeEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LocationCountry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocationState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NativeAboutMe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NativeDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000000000000000000000000",
                            Created = new DateTime(2023, 3, 15, 14, 41, 19, 468, DateTimeKind.Local).AddTicks(5989),
                            Email = "tiagoramirez2001@gmail.com",
                            EnglishAboutMe = "Fullstack Web Dev. with 1 year of experience in the IT area. My main stack: React + Typescript + .NET 6 API + SQL Server + Node",
                            EnglishDesc = "FullStack Web Dev. with +1yr exp. || React + Typescript + .NET 6 + SQL Server + Node || Student in Systems Engineering - UTN (Argentina)",
                            HasEnglishAboutMe = true,
                            HasEnglishDesc = true,
                            IsEnglishModeEnabled = true,
                            LocationCountry = "Argentina",
                            LocationState = "C.A.B.A.",
                            Name = "Tiago Alberto Ramirez Marchisio",
                            NativeAboutMe = "Fullstack Web Dev. con 1 año de experiencia en el área de TI. Mi stack principal: React + Typescript + .NET 6 API + SQL Server + Node",
                            NativeDesc = "FullStack Web Dev. con +1 año de exp. || React + Typescript + .NET 6 + SQL Server + Node || Ingeniería en Sistemas de Información - UTN (Argentina)",
                            Role = "USR",
                            Status = true,
                            Username = "tiagoramirez"
                        });
                });

            modelBuilder.Entity("portfolio.Models.User_Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Skill", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("83fdb392-634b-4ab3-b879-34f38acb35e4"),
                            Percentage = 100,
                            SkillId = new Guid("1121bc0b-c794-493f-b082-a01434bd1600"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("3eda72d6-fba6-4472-b233-b5fcae4ee951"),
                            Percentage = 90,
                            SkillId = new Guid("f20347f9-88ee-441c-a2c2-0be4ac3a12cb"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("b49e9410-be31-4388-bada-7c256d0269a2"),
                            Percentage = 90,
                            SkillId = new Guid("a0c607dc-b4a8-48c2-9b50-6c76307ee18f"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("a36da4d1-c873-4115-b721-101d6fc2e32b"),
                            Percentage = 75,
                            SkillId = new Guid("01736635-6135-4855-ac64-8d506a00b7e3"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("f7e83d7d-3b31-47f7-bb25-f469cb10925c"),
                            Percentage = 90,
                            SkillId = new Guid("1b677ea6-c7ba-4122-8568-2ac2d1a63775"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("413e5cbc-8d8a-47dc-9e85-0861f6647b17"),
                            Percentage = 95,
                            SkillId = new Guid("df4f8daf-d2f2-4408-bca6-36817a59e276"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("9d2bc86c-d1d5-4a6f-90d2-0c04d0810672"),
                            Percentage = 100,
                            SkillId = new Guid("5bbaa8fc-1fa7-4f5e-b794-bc4bb542e475"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("383db374-77bc-47e4-9113-85160b8afc5b"),
                            Percentage = 90,
                            SkillId = new Guid("2a3e2976-1a46-4b37-bb72-1407a293c6f2"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("7addc2c9-fe10-4e49-8e4b-4484c9b08632"),
                            Percentage = 90,
                            SkillId = new Guid("00d7a50f-d03e-439e-98d1-0598edac66c8"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("537af6f0-05e4-43cc-bd3c-b0cfdb74a480"),
                            Percentage = 70,
                            SkillId = new Guid("52d2e5a9-6c7b-446a-9eed-2fdceecacba8"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("82632860-3dfe-4bb1-b707-8b5f4c8f9f6a"),
                            Percentage = 100,
                            SkillId = new Guid("ae5de5d2-5907-4c89-954b-5392fc468d61"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("e63bba3b-26ac-4b73-84c3-faf330c48e65"),
                            Percentage = 100,
                            SkillId = new Guid("b7a709d4-5018-4e63-85af-e1c5aaf0e999"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("fc500db9-15d4-457c-ad99-eb6542eff1ab"),
                            Percentage = 70,
                            SkillId = new Guid("07126d57-4c45-468d-8b79-d63fc0f404fb"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("0de3e8b5-89d2-4b24-91d2-cb0a49bc9937"),
                            Percentage = 90,
                            SkillId = new Guid("078b6b41-488e-48de-bd91-e35c00707a71"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("327ecfbc-b870-44d7-948c-fa6e4bbcfcd7"),
                            Percentage = 80,
                            SkillId = new Guid("88b7fabd-bdfe-4482-8017-189281262f87"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("54e27954-16e8-48be-bab4-490929b00660"),
                            Percentage = 90,
                            SkillId = new Guid("e5ec4653-de39-4c5f-850a-484c3571fa37"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("03daf1d5-cd5f-4704-9bb1-acb29637383d"),
                            Percentage = 100,
                            SkillId = new Guid("ce7eab35-5497-4c65-b347-b8946565b7ff"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("57ae64d8-3a7e-4fc2-b549-31c73bc09a5d"),
                            Percentage = 70,
                            SkillId = new Guid("7e55997c-65c8-4ad8-94cf-f202c70b790e"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("4ef53ebc-d0b4-4f47-91ce-12da23c70e19"),
                            Percentage = 95,
                            SkillId = new Guid("83e7506c-1bce-4745-9fb5-d02bdb97ec55"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("83766c28-b27e-41cf-ad36-e91f06ff430a"),
                            Percentage = 95,
                            SkillId = new Guid("5f8ac962-29de-40a2-ae70-4a9454d13af0"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("c0a676c5-5c25-4934-8441-3ac6afab7028"),
                            Percentage = 95,
                            SkillId = new Guid("b4a0ac5c-6196-443b-b51a-bb713368a13c"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("731739b2-3daf-4a5e-b34d-77e41e930a87"),
                            Percentage = 80,
                            SkillId = new Guid("55d5154c-0fe0-44e0-a858-dcf84cd722ab"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("851231a8-15d3-4ec1-b1f7-c1ec62f92d67"),
                            Percentage = 80,
                            SkillId = new Guid("7dfdb4d5-ccf2-4289-a806-f8d6eb446976"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("e74ce1c6-dbc0-45b6-bd04-101bd0a430e6"),
                            Percentage = 80,
                            SkillId = new Guid("531e893a-69b0-44f1-a1a5-a78fa45942df"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("b477a07c-3e32-4ad4-99f6-6425f6549cc1"),
                            Percentage = 95,
                            SkillId = new Guid("cce7167a-c15c-4eeb-8233-ba21c7903b24"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("8a540f98-b998-4831-8a8a-be0b367c0233"),
                            Percentage = 90,
                            SkillId = new Guid("a8bfd73f-60cb-4086-9a9d-5eecc5348b4a"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("6b12c79c-8d17-4b1f-b25c-b2df1ace4d7a"),
                            Percentage = 90,
                            SkillId = new Guid("2214731b-3cc1-4e68-ac3c-0f3cd6cdd9de"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("7d359684-0d90-4949-a4af-d6010b5462f2"),
                            Percentage = 100,
                            SkillId = new Guid("0d79c929-375c-4f12-867f-a2231ece9cb8"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("e2d52631-d7b0-4aa1-b74a-36e023cb26f6"),
                            Percentage = 100,
                            SkillId = new Guid("ea519d0b-b411-4643-83d4-9f2309ee9f38"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("94564d63-e18a-40d3-a49a-44732c6137c2"),
                            Percentage = 90,
                            SkillId = new Guid("5846e310-ed1d-4ceb-ae3f-bbb1acbc5bb7"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("e08ab0a2-398f-4d16-aaec-111e4293ece6"),
                            Percentage = 80,
                            SkillId = new Guid("d25a6709-4d66-4c71-9f73-5fe8c3f327b9"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("a4798e8e-d9b1-4d3e-95c7-a03d2986b59a"),
                            Percentage = 90,
                            SkillId = new Guid("74336b5a-99ba-4b9a-a45b-682a738759dd"),
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("11c45bb1-88be-4f51-bc09-f88ccc715a89"),
                            Percentage = 85,
                            SkillId = new Guid("89b26a42-7c0b-4ac2-aaf7-cbe966dbfa98"),
                            UserId = "00000000000000000000000000000"
                        });
                });

            modelBuilder.Entity("portfolio.Models.User_SocialMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocialMediaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SocialMediaId");

                    b.HasIndex("UserId");

                    b.ToTable("User_SocialMedia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ae61b37-537a-4600-b277-7224b6327beb"),
                            SocialMediaId = new Guid("33a0a8ef-474c-4755-9634-810b37c6c3e6"),
                            Url = "https://www.github.com/tiagoramirez/",
                            UserId = "00000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("87709196-a2ea-4f46-9c11-f5f394d59378"),
                            SocialMediaId = new Guid("1c8c83aa-16e3-4ffd-a15a-9fb68454f537"),
                            Url = "https://www.linkedin.com/in/tiagoramirezmar/",
                            UserId = "00000000000000000000000000000"
                        });
                });

            modelBuilder.Entity("portfolio.Models.Education", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Educations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Experience", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Experiences")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Project", b =>
                {
                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.User_Skill", b =>
                {
                    b.HasOne("portfolio.Models.Skill", "Skill")
                        .WithMany("User_Skills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("Skills")
                        .HasForeignKey("UserId");

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.User_SocialMedia", b =>
                {
                    b.HasOne("portfolio.Models.SocialMedia", "SocialMedia")
                        .WithMany("User_SocialMedias")
                        .HasForeignKey("SocialMediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("portfolio.Models.User", "User")
                        .WithMany("SocialMedias")
                        .HasForeignKey("UserId");

                    b.Navigation("SocialMedia");

                    b.Navigation("User");
                });

            modelBuilder.Entity("portfolio.Models.Skill", b =>
                {
                    b.Navigation("User_Skills");
                });

            modelBuilder.Entity("portfolio.Models.SocialMedia", b =>
                {
                    b.Navigation("User_SocialMedias");
                });

            modelBuilder.Entity("portfolio.Models.User", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Experiences");

                    b.Navigation("Projects");

                    b.Navigation("Skills");

                    b.Navigation("SocialMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
